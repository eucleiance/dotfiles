{
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 14,
  // ui
  "window.commandCenter": false,
  "editor.scrollbar.vertical": "auto",
  "window.titleBarStyle": "custom",
  "editor.scrollbar.horizontal": "auto",
  // APC
  // "apc.activityBar": {
  //   "position": "bottom",
  //   "hideSettings": true,
  //   "size": 28
  // },
  // "apc.electron": {
  //   "titleBarStyle": "hiddenInset",
  //   "trafficLightPosition": {
  //     "x": 12,
  //     "y": 10
  //   }
  // },
  // "apc.font.family": "Geist Mono",
  // "apc.monospace.font.family": "Geist Mono",
  // "apc.statusBar": {
  //   "position": "editor-bottom",
  //   "height": 28,
  //   "fontSize": 12
  // },
  // Cusom css
  // "apc.stylesheet": {
  //   ".sidebar > .composite": "height: 12px !important",
  //   ".title-label": "display: none !important",
  //   ".title-actions": "display: none !important",
  //   ".tabs-and-actions-container > .editor-actions": "display: none !important",
  //   ".titlebar-center": "display: none !important",
  //   ".titlebar-right": "display: none !important",
  //   ".inline-tabs-placeholder": "display: none !important",
  //   ".split-view-view .visible": "background-color: #110f17 !important"
  // },
  // Toggle excluded files
  "files.exclude": {
    "**/.git": false,
    "**/.svn": false,
    "**/.hg": false,
    "**/CVS": false,
    "**/.DS_Store": false,
    "**/Thumbs.db": false,
    "**/node_modules": false,
    "**/.next": false,
    "**/.husky": false,
    "**/drizzle": false,
    "**/dist": false,
    "**/.todo.md": false,
    "**/.vscode": false,
    "**/.eslintrc.cjs": false,
    "**/.editorconfig": false,
    "**/.gitignore": false,
    "**/.lintstagedrc.mjs": false,
    "**/.markdownlint.json": false,
    "**/.markdownlintignore": false,
    "**/.prettierignore": false,
    "**/bun.lockb": false,
    "**/cspell.json": false,
    "**/package-lock.json": false,
    "**/pnpm-lock.yaml": false,
    "**/next-env.d.ts": false,
    "**/postcss.config.cjs": false,
    "**/prettier.config.js": false,
    "**/README.md": false,
    "**/next.config.js": false,
    "**/tailwind.config.ts": false,
    "**/drizzle.config.ts": false,
    "**/migrate.ts": false,
    "**/.env.example": false
  },
  // Misc
  "workbench.startupEditor": "none",
  "explorer.compactFolders": false,
  "editor.linkedEditing": true,
  "breadcrumbs.filePath": "off",
  "files.trimTrailingWhitespace": true,
  "[markdown]": {
    "files.trimTrailingWhitespace": false
  },
  "window.zoomLevel": 0,
  // Neovim
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/VSCodium/User/init.vim",
  "vscode-neovim.neovimInitVimPaths.darwin": "$HOME/.config/VSCodium/User/init.vim",
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "whichkey.sortOrder": "none",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "n",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "N",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "p",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "P",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "|",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "-",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    // {
    //   "key": "/",
    //   "name": "comment",
    //   "type": "command",
    //   "command": "vscode-neovim.send",
    //   "args": "<C-/>"
    // },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "h",
      "name": "Toggle Hover",
      "type": "command",
      "command": "editor.action.showHover"
    },
    {
      "key": "n",
      "name": "No Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    // {
    //   "key": "i",
    //   "name": "Insert...",
    //   "type": "bindings",
    //   "bindings": [
    //     {
    //       "key": "j",
    //       "name": "Insert line below",
    //       "type": "command",
    //       "command": "editor.action.insertLineAfter"
    //     },
    //     {
    //       "key": "k",
    //       "name": "Insert line above",
    //       "type": "command",
    //       "command": "editor.action.insertLineBefore"
    //     },
    //     {
    //       "key": "s",
    //       "name": "Insert snippet",
    //       "type": "command",
    //       "command": "editor.action.insertSnippet"
    //     }
    //   ]
    // },
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        }
      ]
    },
    {
      "key": "M",
      "name": "Minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "T",
          "name": "Focus Terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "!terminalFocus"
        }
      ]
    },
    {
      "key": "w",
      "name": "Save file",
      "type": "command",
      "command": "workbench.action.files.save"
    },
    {
      "key": "q",
      "name": "Close file",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    {
      "key": "y",
      "name": "Sync...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Download Settings",
          "type": "command",
          "command": "extension.downloadSettings"
        },
        {
          "key": "u",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "editor.stickyScroll.enabled": false,
  "editor.lineNumbers": "relative",
  "editor.tabSize": 2,
  "tailwindCSS.lint.invalidApply": "ignore",
  "tailwindCSS.lint.cssConflict": "error",
  "tailwindCSS.emmetCompletions": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.detectIndentation": true,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          "punctuation",
          "attribute_value",
          "meta.brace",
          "punctuation.definition.parameters",
          "punctuation.definition.template-expression",
          "keyword.operator",
          "keyword.other",
          "punctuation.terminator",
          "punctuation.separator",
          "punctuation.definition.generic.begin",
          "punctuation.definition.generic.end",
          "meta.function.type-declaration",
          "keyword.other.colon.elm",
          "meta.record.field.elm keyword.other.elm",
          "keyword.other.period.elm",
          "meta.tag.xml",
          "meta.tag.preprocessor.xml",
          "punctuation.definition.block",
          "punctuation.accessor",
          "constant.name.attribute.tag.pug",
          "string.interpolated.pug",
          "keyword.other.whitespace.liquid",
          "meta.tag.template.block.twig",
          "meta.tag.template.value.twig",
          "begin.bracket",
          "end.bracket",
          "text.html.twig meta.tag.inline.any",
          "text.html.twig meta.tag.block.any",
          "support.function.construct.begin.blade",
          "support.function.construct.end.blade source.php",
          "support.function.construct.end.blade",
          "meta.function.echo.blade source.php",
          "punctuation.definition.list.begin.python",
          "punctuation.definition.list.end.python",
          "text.html.vue-html meta.tag.block.any",
          "keyword.operator.assignment.tsx",
          "meta.definition.method.signature.java",
          "meta.class.body.groovy",
          "meta.definition.method.groovy meta.method.body.java meta.declaration.assertion.groovy",
          "punctuation.definition.list.begin.erlang",
          "meta.expression.parenthesized",
          "meta.definition.function.swift meta.parameter-clause.swift",
          "source.swift meta.function-call.swift",
          "punctuation.section.embedded.end.swift source.swift",
          "source.lua",
          "meta.function.lua",
          "punctuation.definition.keyword.svelte",
          "source.svelte meta.scope.tag.SpeakerPicture.svelte meta.tag.start.svelte entity.other.attribute-name.svelte",
          "expression.embbeded.vue punctuation.definition.tag.begin.html.vue",
          "expression.embbeded.vue punctuation.definition.tag.end.html.vue",
          "source.graphql\tmeta.type.interface.graphql meta.type.object.graphql meta.type.list.graphql meta.brace.square.graphql",
          "punctuation.output.liquid",
          "text.html.liquid meta.tag.liquid punctuation.definition.tag.end.liquid",
          "JSXAttrs keyword.operator.assignment.jsx",
          "meta.tag.attributes.js keyword.operator.assignment.js"
        ],
        "settings": {
          "foreground": "#FFFFFFFF"
        }
      },
      {
        "scope": "comment",
        "settings": {
          "foreground": "#FFFFFF66"
        }
      },
      {
        "scope": "keyword.operator",
        "settings": {
          "foreground": "#FFFFFFCC"
        }
      },
      {
        "scope": "",
        "settings": {
          "foreground": "#FF0000"
        }
      },
      {
        "scope": [
          "meta.section.struct.go variable.other.field.go",
          "meta.section.struct.go variable.other.declaration.go",
          "source",
          "support",
          "constant.character.entity.named",
          "meta.jsx.children",
          "source.lua",
          "text.html.derivative",
          "source.graphql meta.selections variable.other.alias.graphql",
          "source.graphql meta.type.interface.graphql meta.type.object.graphql variable.graphql",
          "source.graphql variable.arguments.graphql",
          "JSXNested"
        ],
        "settings": {
          "foreground": "#FFFFFFEE"
        }
      }
    ]
  },
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#FFFFFFAA",
    "editorLineNumber.foreground": "#555555",
    "editorLineNumber.activeForeground": "#FFFFFF",
    "tree.indentGuidesStroke": "#AAAAAA",
    "editorIndentGuide.activeBackground1": "#FFFFFF77",
    "editorGutter.addedBackground": "#00000000",
    "editorGutter.modifiedBackground": "#00000000",
    "editorGutter.deletedBackground": "#00000000",
    "editor.lineHighlightBackground": "#222222DD",
    "editor.lineHighlightBorder": "#222222DD",
    "editor.wordHighlightBackground": "#FFFFFF11",
    "editor.wordHighlightBorder": "#FFFFFF55",
    "editorBracketMatch.border": "#FFFFFF55",
    "editorBracketMatch.background": "#FFFFFF11",
    "editor.wordHighlightStrongBackground": "#cecece22",
    "editor.wordHighlightTextBorder": "#FFFFFF55",
    "editorHoverWidget.border": "#3a3a3a",
    "list.focusoutline": "#1e1e1e",
    "focusBorder": "#000000",
    "activityBar.border": "#000000",
    "sideBar.border": "#000000",
    "sideBarSectionHeader.border": "#000000",
    "statusBar.border": "#000000",
    "statusBar.noFolderBorder": "#000000",
    "statusBar.debuggingBorder": "#000000",
    "statusBarItem.focusBorder": "#000000",
    "statusBar.focusBorder": "#000000",
    "titleBar.border": "#000000",
    "menubar.selectionBorder": "#000000",
    "menu.selectionBorder": "#000000",
    "menu.border": "#000000",
    "input.border": "#000000",
    "inputOption.activeBorder": "#000000",
    "terminal.border": "#000000",
    "panel.border": "#000000",
    "editorGroupHeader.border": "#000000",
    "editorGroupHeader.tabsBorder": "#000000",
    "tab.border": "#000000",
    "tab.activeBorder": "#000000",
    "tab.activeBorderTop": "#000000",
    "tab.hoverBorder": "#000000",
    "pickerGroup.border": "#000000",
    "debugToolBar.border": "#000000",
    "notificationToast.border": "#000000",
    "notifications.border": "#000000",
    "list.focusOutline": "#000000",
    "activityBar.activeBackground": "#121218",
    "list.activeSelectionBackground": "#121218",
    "notifications.background": "#121218",
    "list.hoverBackground": "#121218",
    "list.focusBackground": "#121218",
    "input.background": "#121218",
    "editorWidget.background": "#121218",
    "tab.activeBackground": "#121218",
    "menu.background": "#121218",
    "tab.hoverBackground": "#121218",
    "menubar.selectionBackground": "#121218",
    "editorHoverWidget.background": "#121218",
    "quickInput.background": "#121218",
    "quickInputTitle.background": "#121218",
    "activityBar.inactiveForeground": "#77779F",
    "sideBar.foreground": "#77779F",
    "titleBar.activeForeground": "#77779F",
    "titleBar.inactiveForeground": "#77779F",
    "tab.inactiveForeground": "#77779F",
    "tab.unfocusedInactiveForeground": "#77779F",
    "menu.foreground": "#77779F",
    "list.hoverForeground": "#FFFFFF",
    "list.focusForeground": "#FFFFFF",
    "activityBar.foreground": "#FFFFFF",
    "sideBarSectionHeader.foreground": "#FFFFFF",
    "sideBarTitle.foreground": "#FFFFFF",
    "list.inactiveSelectionForeground": "#FFFFFF",
    "list.activeSelectionForeground": "#FFFFFF",
    "statusBar.foreground": "#FFFFFF",
    "tab.activeForeground": "#FFFFFF",
    "tab.unfocusedActiveForeground": "#FFFFFF",
    "activityBar.background": "#0A0A0F",
    "sideBar.background": "#0A0A0F",
    "sideBarSectionHeader.background": "#0A0A0F",
    "statusBar.background": "#0A0A0F",
    "titleBar.activeBackground": "#0A0A0F",
    "titleBar.inactiveBackground": "#0A0A0F",
    "editor.background": "#0A0A0F",
    "editorGroupHeader.tabsBackground": "#0A0A0F",
    "editorGutter.background": "#0A0A0F",
    "tab.inactiveBackground": "#0A0A0F",
    "tab.unfocusedInactiveBackground": "#0A0A0F",
    "breadcrumb.background": "#0A0A0F",
    "panel.background": "#0A0A0F",
    "terminal.background": "#0A0A0F",
    "minimap.background": "#0A0A0F"
  },
  "window.customTitleBarVisibility": "auto",
  "workbench.editor.editorActionsLocation": "titleBar",
  "editor.guides.bracketPairs": false,
  "editor.guides.bracketPairsHorizontal": false,
  "editor.cursorBlinking": "smooth",
  "keyboard.dispatch": "keyCode",
  "vscode-neovim.compositeKeys": {
    "jk": {
      "command": "vscode-neovim.escape",
    },
  },
  "editor.wordWrap": "on",
  //exludes fies & folders in search indexing
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/env": true,
    "**/venv": true
  },
  //exludes fies & folders for watcher service
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/env/**": true,
    "**/venv/**": true,
    "env-*": true
  },
  "workbench.colorTheme": "Bearded Theme Surprising Blueberry",
  "git.openRepositoryInParentFolders": "always",
  "PrimaryForeground.HexCode": "#FFFFFF",
  "PrimaryBackground.HexCode": "#0A0A0F",
  "SecondaryBackground.HexCode": "#121218",
  "SecondaryForeground.HexCode": "#77779F",
  "Borders.HexCode": "#000000",
  "Borders.Enable": true,
  "SecondaryBackground.Enable": true,
  "SecondaryForeground.Enable": true,
  "Punctuation.HexCode": "#222222",
  "PrimaryForeground.Enable": true,
  "PrimaryBackground.Enable": true,
  "Punctuation.Enable": true,
}